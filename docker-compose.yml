version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: flight-logbook-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: flightlog_prod
      POSTGRES_USER: flightlog
      POSTGRES_PASSWORD: prod_password_change_me
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flightlog -d flightlog_prod"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - flight-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flight-logbook-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://flightlog:prod_password_change_me@postgres:5432/flightlog_prod
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - flight-network
    # Run migrations then start
    command: sh -c "npm run migrate && npm run dev"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flight-logbook-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - flight-network

volumes:
  postgres_prod_data:

networks:
  flight-network:
    driver: bridge
